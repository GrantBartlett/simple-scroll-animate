{"version":3,"sources":["../src/AnimatorDelay.ts","../src/AnimationElement.ts","../src/ScrollAnimator.ts","index.ts"],"names":["AnimatorDelay","animateDelay","delayComplete","start","timerRunning","update","deltaTime","timeElapsed","callbackFired","reset","canPlayAnimation","AnimationElement","_htmlElement","animateOnce","dataset","_animateOnce","animateClass","_animateClass","animateThreshold","_animateThreshold","parseFloat","animateRootMargin","_animateRootMargin","animateDelaySeconds","_animateDelaySeconds","_animatorDelay","onAnimationCanPlay","bind","observer","IntersectionObserver","onIntersectionCallback","rootMargin","threshold","observe","entries","_hasPlayedOnce","disconnect","i","length","entry","isIntersecting","intersectionRatio","play","finish","console","log","classList","add","remove","dispose","ScrollAnimator","create","elements","requestAnimationFrameRunning","window","requestAnimationFrame","htmlElement","animationElements","push","now","then"],"mappings":"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","file":"example.312895b9.js","sourceRoot":"..\\example","sourcesContent":["export class AnimatorDelay \r\n{\r\n    private timerRunning: boolean = false;\r\n    private timeElapsed: number = 0;\r\n    private callbackFired: boolean = false;\r\n\r\n    constructor(private animateDelay: number, private delayComplete: Function)\r\n    {\r\n    }\r\n\r\n    public start(): void\r\n    {\r\n        this.timerRunning = true;\r\n    }\r\n\r\n    public update(deltaTime: number): void\r\n    {\r\n        if (this.timerRunning === false)\r\n            return;\r\n\r\n        this.timeElapsed += deltaTime;\r\n\r\n        if (this.timeElapsed > this.animateDelay)\r\n        {\r\n            this.delayComplete();\r\n            this.callbackFired = true;\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    private reset(): void\r\n    {\r\n        this.timerRunning = false;\r\n        this.timeElapsed = 0;\r\n    }\r\n\r\n    public canPlayAnimation(): boolean \r\n    {\r\n        return this.callbackFired;\r\n    }\r\n}","import { AnimatorDelay } from \"./AnimatorDelay\";\r\nimport { AnimatorElement } from \"./AnimatorElement\";\r\n\r\nexport class AnimationElement implements AnimatorElement\r\n{\r\n    private observer: IntersectionObserver;\r\n    private _hasPlayedOnce: boolean = false;\r\n\r\n    private _animateOnce: boolean = false;\r\n    private _animateClass: string = \"animate-in\";\r\n    private _animateThreshold: number = 0.5;\r\n    private _animateRootMargin: string = \"0px\";\r\n    private _animateDelaySeconds: number = 0;\r\n\r\n    private _animatorDelay: AnimatorDelay;\r\n\r\n    constructor(private _htmlElement: HTMLElement)\r\n    {\r\n        const animateOnce: string | undefined = this._htmlElement.dataset.animateOnce;\r\n        if (animateOnce)\r\n        {\r\n            this._animateOnce = animateOnce === \"true\";\r\n        }\r\n\r\n        const animateClass: string | undefined = this._htmlElement.dataset.animateClass;\r\n        if (animateClass)\r\n        {\r\n            this._animateClass = animateClass;\r\n        }\r\n\r\n        const animateThreshold: string | undefined = this._htmlElement.dataset.animateThreshold;\r\n        if (animateThreshold)\r\n        {\r\n            this._animateThreshold = parseFloat(animateThreshold);\r\n        }\r\n\r\n        const animateRootMargin: string | undefined = this._htmlElement.dataset.animateRootMargin;\r\n        if (animateRootMargin)\r\n        {\r\n            this._animateRootMargin = animateRootMargin;\r\n        }\r\n\r\n        const animateDelaySeconds: string | undefined = this._htmlElement.dataset.animateDelaySeconds;\r\n        if (animateDelaySeconds)\r\n        {\r\n            this._animateDelaySeconds = parseFloat(animateDelaySeconds);\r\n        }\r\n\r\n        this._animatorDelay = new AnimatorDelay(this._animateDelaySeconds, this.onAnimationCanPlay.bind(this));\r\n\r\n        this.observer = new IntersectionObserver(this.onIntersectionCallback.bind(this), {\r\n            rootMargin: this._animateRootMargin,\r\n            threshold: this._animateThreshold\r\n        });\r\n\r\n        this.observer.observe(this._htmlElement);\r\n    }\r\n\r\n    private onIntersectionCallback(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void\r\n    {\r\n        if (this._hasPlayedOnce === true && this._animateOnce === true)\r\n        {\r\n            // Configured to play the animation once, no need to keep the observer\r\n            return observer.disconnect();\r\n        }\r\n\r\n        for (let i = 0; i < entries.length; i++)\r\n        {\r\n            const entry: IntersectionObserverEntry = entries[i];\r\n            if (entry.isIntersecting === true && entry.intersectionRatio > 0)\r\n            {\r\n                this.play();\r\n            }\r\n            else \r\n            {\r\n                this.finish();\r\n            }\r\n        }\r\n    }\r\n\r\n    private play(): void\r\n    {\r\n        this._animatorDelay.start();\r\n    }\r\n\r\n    private onAnimationCanPlay(): void\r\n    {\r\n        console.log(\"onAnimationCanPlay\");\r\n\r\n        this._htmlElement.classList.add(this._animateClass);\r\n        this._hasPlayedOnce = true;\r\n    }\r\n\r\n    private finish(): void\r\n    {\r\n        this._htmlElement.classList.remove(this._animateClass);\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this.observer.disconnect();\r\n    }\r\n\r\n    public update(deltaTime: number): void\r\n    {\r\n        this._animatorDelay.update(deltaTime);\r\n    }\r\n}","import { AnimationElement } from \"./AnimationElement\";\n\nexport class ScrollAnimator \n{\n    private animationElements: Array<AnimationElement> = [];\n    private requestAnimationFrameRunning: boolean = false;\n\n    constructor()\n    {\n    }\n\n    /**\n     * Create observers from a NodeListOf<HTMLElement>\n     * Clears existing list of elements if any exist\n     * @param elements\n     */\n    public create(elements: NodeListOf<HTMLElement>): void\n    {\n        this.dispose();\n\n        if (this.requestAnimationFrameRunning === false)\n        {\n            window.requestAnimationFrame(this.update.bind(this));\n        }\n\n        this.requestAnimationFrameRunning = true;\n\n        for (let i = 0; i < elements.length; i++)\n        {\n            const htmlElement = elements[i] as HTMLElement;\n\n            this.animationElements.push(new AnimationElement(htmlElement));\n        }\n    }\n\n    /**\n     * Dispose of all observers and remove existing list elements\n     */\n    public dispose(): void\n    {\n        for (let i = 0; i < this.animationElements.length; i++)\n        {\n            this.animationElements[i].dispose();\n        }\n        this.animationElements = [];\n    }\n\n\n    private then: number = 0;\n    private update(now: number): void\n    {\n        now *= 0.001;\n        const deltaTime: number = (now - this.then);\n\n        for (let i = 0; i < this.animationElements.length; i++)\n        {\n            this.animationElements[i].update(deltaTime);\n        }\n\n        this.then = now;\n        requestAnimationFrame(this.update.bind(this));\n    }\n}","import { ScrollAnimator } from \"../.\";\n\nconst scrollAnimator = new ScrollAnimator();\n\n// Your query selector can be anything\nscrollAnimator.create(document.querySelectorAll(\".js-animate\"));\n"]}