{"version":3,"sources":["../src/AnimationElement.ts","../src/ScrollAnimator.ts","index.ts"],"names":["AnimationElement","_htmlElement","htmlElement","dataset","animateOnce","_animateOnce","animateClass","_animateClass","animateThreshold","_animateThreshold","parseFloat","observer","IntersectionObserver","onIntersectionCallback","bind","rootMargin","threshold","observe","entries","animationPlayedOnce","disconnect","i","length","entry","isIntersecting","animationPlaying","play","reset","classList","add","addEventListener","onAnimationComplete","removeEventListener","remove","dispose","ScrollAnimator","create","elements","animationElements","push"],"mappings":"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","file":"example.6fe2a491.js","sourceRoot":"..\\example","sourcesContent":["export class AnimationElement \r\n{\r\n    private observer: IntersectionObserver;\r\n    private animationPlaying: boolean = false;\r\n    private animationPlayedOnce: boolean = false;\r\n\r\n    private _animateOnce: boolean = false;\r\n    private _animateClass: string = \"no-animation\";\r\n    private _animateThreshold: number = 0.5;\r\n\r\n    constructor(private _htmlElement: HTMLElement)\r\n    {\r\n        if (this.htmlElement.dataset.animateOnce)\r\n        {\r\n            this._animateOnce = this.htmlElement.dataset.animateOnce === \"true\";\r\n        }\r\n\r\n        if (this.htmlElement.dataset.animateClass)\r\n        {\r\n            this._animateClass = this.htmlElement.dataset.animateClass;\r\n        }\r\n\r\n        if (this.htmlElement.dataset.animateThreshold)\r\n        {\r\n            this._animateThreshold = parseFloat(this.htmlElement.dataset.animateThreshold);\r\n        }\r\n\r\n        this.observer = new IntersectionObserver(this.onIntersectionCallback.bind(this), {\r\n            rootMargin: \"0px\",\r\n            threshold: this.animateThreshold\r\n        });\r\n\r\n        this.observer.observe(this.htmlElement);\r\n    }\r\n\r\n    private onIntersectionCallback(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void\r\n    {\r\n        if (this.animationPlayedOnce === true && this.animateOnce === true)\r\n        {\r\n            // Configured to play the animation once, no need to keep the observer\r\n            return observer.disconnect();\r\n        }\r\n\r\n        for (let i = 0; i < entries.length; i++)\r\n        {\r\n            const entry: IntersectionObserverEntry = entries[i];\r\n            if (entry.isIntersecting === true && this.animationPlaying === false)\r\n            {\r\n                this.play();\r\n            }\r\n            else \r\n            {\r\n                this.reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    private play(): void\r\n    {\r\n        this.animationPlaying = true;\r\n        this.animationPlayedOnce = true;\r\n\r\n        this.htmlElement.classList.add(this.animateClass);\r\n        this.htmlElement.addEventListener(\"animationcancel\", this.onAnimationComplete.bind(this), false);\r\n        this.htmlElement.addEventListener(\"animationend\", this.onAnimationComplete.bind(this), false);\r\n    }\r\n\r\n    private onAnimationComplete(): void\r\n    {\r\n        this.animationPlaying = false;\r\n\r\n        this.htmlElement.removeEventListener(\"animationcancel\", this.onAnimationComplete.bind(this), false);\r\n        this.htmlElement.removeEventListener(\"animationend\", this.onAnimationComplete.bind(this), false);\r\n    }\r\n\r\n    private reset(): void\r\n    {\r\n        this.htmlElement.classList.remove(this.animateClass);\r\n        this.htmlElement.removeEventListener(\"animationcancel\", this.onAnimationComplete.bind(this), false);\r\n        this.htmlElement.removeEventListener(\"animationend\", this.onAnimationComplete.bind(this), false);\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this.observer.disconnect();\r\n    }\r\n\r\n    public get animateOnce(): boolean { return this._animateOnce; }\r\n    public get animateThreshold(): number { return this._animateThreshold; }\r\n    public get animateClass(): string { return this._animateClass; }\r\n    public get htmlElement(): HTMLElement { return this._htmlElement; }\r\n}","import { AnimationElement } from \"./AnimationElement\";\n\nexport class ScrollAnimator \n{\n    private animationElements: Array<AnimationElement> = [];\n\n    constructor()\n    {\n    }\n\n    /**\n     * Create observers from a NodeListOf<HTMLElement>\n     * Clears existing list of elements if any exist\n     * @param elements\n     */\n    public create(elements: NodeListOf<HTMLElement>): void\n    {\n        this.dispose();\n\n        for (let i = 0; i < elements.length; i++)\n        {\n            const htmlElement = elements[i] as HTMLElement;\n\n            this.animationElements.push(new AnimationElement(htmlElement));\n        }\n    }\n\n    /**\n     * Dispose of all observers and remove existing list elements\n     */\n    public dispose(): void\n    {\n        for (let i = 0; i < this.animationElements.length; i++)\n        {\n            this.animationElements[i].dispose();\n        }\n        this.animationElements = [];\n    }\n}","import { ScrollAnimator } from \"../.\";\n\nconst scrollAnimator = new ScrollAnimator();\nscrollAnimator.create(document.querySelectorAll(\"[data-animate]\"));\n"]}